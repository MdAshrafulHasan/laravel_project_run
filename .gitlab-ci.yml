stages:
  - build
  - test
  - deploy

variables:
  MYSQL_DATABASE: laravel
  MYSQL_USER: laravel
  MYSQL_PASSWORD: secret
  MYSQL_ROOT_PASSWORD: root
  DB_CONNECTION: mysql
  DB_HOST: mysql
  DB_PORT: 3306
  DB_DATABASE: laravel
  DB_USERNAME: laravel
  DB_PASSWORD: secret

# Use docker-in-docker service
services:
  - name: mysql:8.0
    alias: mysql

build_app:
  stage: build
  image: composer:2
  script:
    - composer install --no-interaction --prefer-dist --optimize-autoloader
  artifacts:
    paths:
      - vendor/
    expire_in: 1h

run_tests:
  stage: test
  image: php:8.2
  services:
    - name: mysql:8.0
      alias: mysql
  before_script:
    - apt-get update && apt-get install -y unzip git libzip-dev libpq-dev && docker-php-ext-install pdo_mysql zip
    - cp .env.example .env
    - php artisan key:generate
    - php artisan migrate --force
  script:
    - vendor/bin/phpunit --testdox

deploy_production:
  stage: deploy
  only:
    - main
  script:
    - echo "Deploying Laravel app..."
    # Example: Deploy via SSH or Docker registry
    # ssh user@your-server "cd /var/www/app && git pull origin main && docker-compose up -d --build"
